#!/usr/bin/expect -f

set timeout -1

set elastic_password $env(ELASTIC_PASSWORD)
set apm_password $env(APM_PASSWORD)
set kibana_password $env(KIBANA_PASSWORD)
set kibana_system_password $env(KIBANA_SYSTEM_PASSWORD)
set logstash_password $env(LOGSTASH_PASSWORD)
set beats_password $env(BEATS_PASSWORD)
set remote_monitoring_password $env(REMOTE_MONITORING_PASSWORD)

spawn /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive

expect {
    -re ".*continue \\\[y/N\\\]" {
        send "y\r"
    }
}

while {1} {
    expect {
        -re "Enter password for \\\[(.*?)\\\]:" {
            set user $expect_out(1,string)
            switch $user {
                "elastic" { set password $elastic_password }
                "apm_system" { set password $apm_password }
                "kibana" { set password $kibana_password }
                "kibana_system" { set password $kibana_system_password }
                "logstash_system" { set password $logstash_password }
                "beats_system" { set password $beats_password }
                "remote_monitoring_user" { set password $remote_monitoring_password }
                default {
                    send_user "Unknown user: $user\n"
                    exit 1
                }
            }
            send "$password\r"
        }
        -re "Reenter password for \\\[(.*?)\\\]:" {
            set user $expect_out(1,string)
            switch $user {
                "elastic" { set password $elastic_password }
                "apm_system" { set password $apm_password }
                "kibana" { set password $kibana_password }
                "kibana_system" { set password $kibana_system_password }
                "logstash_system" { set password $logstash_password }
                "beats_system" { set password $beats_password }
                "remote_monitoring_user" { set password $remote_monitoring_password }
                default {
                    send_user "Unknown user: $user\n"
                    exit 1
                }
            }
            send "$password\r"
        }
        "Changed password for user" {
        }
        eof {
            break
        }
    }
}
