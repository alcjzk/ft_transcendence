services:
  nginx:
    image: nginx
    container_name: nginx
    build: nginx
    ports: ["80:80"]
    restart: unless-stopped
    networks: 
      - transcendence
      - monitoring
    volumes:
      - nginx-logs:/var/log/nginx
    depends_on:
      - django
      - parcel
      - elasticsearch
      - kibana
      - grafana

  django:
    image: django
    container_name: django
    build: backend/djangoserv
    restart: unless-stopped
    networks: ["transcendence"]
    env_file: .env
    volumes:
      - django-logs:/djangologs/
    depends_on:
      postgres:
        condition: service_healthy

  parcel:
    image: parcel
    container_name: parcel
    build: parcel
    restart: unless-stopped
    networks: ["transcendence"]

  postgres:
    image: postgres
    container_name: postgres
    build: postgres
    restart: unless-stopped
    networks: ["transcendence"]
    env_file: .env
    shm_size: 128mb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]

  prometheus:
    build:
      context: .
      dockerfile: ./monitoring/prometheus/Dockerfile
    container_name: prometheus
    volumes:
      - prometheus-storage:/prometheus-data
    restart: unless-stopped
    networks: ["monitoring"]

  grafana:
    build:
      context: .
      dockerfile: ./monitoring/grafana/Dockerfile
    container_name: grafana
    env_file:
      - .grafana_env
    volumes:
      - grafana-logs:/grafana/data/log
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    networks: ["monitoring"]

  node-exporter:
    build:
      context: .
      dockerfile: ./monitoring/node-exporter/Dockerfile
    container_name: node-exporter
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    networks: ["monitoring"]

  alertmanager:
    build:
      context: .
      dockerfile: ./monitoring/alertmanager/Dockerfile
    container_name: alertmanager
    env_file:
      - .alert_env
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    networks: ["monitoring"]

  elasticsearch:
    build: ./logging/elasticsearch
    container_name: elasticsearch
    environment:
      - ELASTIC_PASSWORD="changeme"
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - es-logs:/usr/share/elasticsearch/logs
      - ./logging/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    restart: unless-stopped
    networks: ["monitoring"]

  logstash:
    build: ./logging/logstash
    container_name: logstash
    volumes:
      - ./logging/logstash/pipeline:/usr/share/logstash/pipeline
      - logstash-logs:/usr/share/logstash/logs
    restart: unless-stopped
    networks: ["monitoring"]
    depends_on:
      - elasticsearch
    ports:
      - 9600:9600
      - 5044:5044

  kibana:
    build: ./logging/kibana
    container_name: kibana
    volumes:
      - ./logging/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - kibana-logs:/kibanalog/
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_PASSWORD="changeme"
      - ELASTIC_PASSWORD="changeme"
    networks: ["monitoring"]
    depends_on:
      - elasticsearch

  filebeat:
    build: ./logging/filebeat
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - nginx-logs:/var/log/nginx:ro
      - django-logs:/djangologs:ro
      - es-logs:/usr/share/elasticsearch/logs:ro
      - logstash-logs:/usr/share/logstash/logs:ro
      - kibana-logs:/kibanalog:ro
      - grafana-logs:/grafana/data/log:ro
      - ./logging/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    restart: unless-stopped
    networks: ["monitoring"]
    depends_on:
      - logstash
    ports:
      - 5601:5601

networks:
  transcendence:
  monitoring:

volumes:
  grafana-storage:
  prometheus-storage:
  esdata:
  nginx-logs:
  django-logs:
  es-logs:
  logstash-logs:
  kibana-logs:
  grafana-logs:
